<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Don&#39;t Think Too Much</title>
    <link>http://randyyaj.github.io/index.xml</link>
    <description>Recent content on Don&#39;t Think Too Much</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Nov 2016 14:46:20 -0500</lastBuildDate>
    <atom:link href="http://randyyaj.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Spring Boot and Vue.js</title>
      <link>http://randyyaj.github.io/post/20161129_vue_spring/</link>
      <pubDate>Tue, 29 Nov 2016 14:46:20 -0500</pubDate>
      
      <guid>http://randyyaj.github.io/post/20161129_vue_spring/</guid>
      <description>

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#setup&#34;&gt;Setup&lt;/a&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#structure&#34;&gt;Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#parent&#34;&gt;Parent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#frontend&#34;&gt;Front End&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#backend&#34;&gt;Back End&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#deploy&#34;&gt;Deploy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;introduction-a-name-introduction-a&#34;&gt;Introduction &lt;a name=&#34;introduction&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This article is about creating a vuejs project that runs on top of spring boot. Many cool kids use node.js these days but I think java is  cool.&lt;/p&gt;

&lt;p&gt;If you simply hate reading and just want the source code you can find it here: &lt;a href=&#34;https://gitlab.com/randyyaj/SpringVue-Starter&#34;&gt;SpringVue Starter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://gitlab.com/randyyaj/SpringVue-Starter.git&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;installation-a-name-installation-a&#34;&gt;Installation &lt;a name=&#34;installation&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In order to continue this project we will need to have the following items installed&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;node.js:latest&lt;/li&gt;
&lt;li&gt;npm:latest&lt;/li&gt;
&lt;li&gt;oracle java-jdk:1.8&lt;/li&gt;
&lt;li&gt;(Optional) A java IDE of your choice. I&amp;rsquo;m using intelliJ&lt;/li&gt;
&lt;li&gt;maven:latest&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ubuntu 16.04&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install node
sudo apt-get install npm
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
sudo apt-get install oracle-java8-set-default
npm install --global vue-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MacOSX El Capitan&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install node
brew install npm
brew update
brew tap caskroom/cask
brew install brew-cask
brew install Caskroom/cask/java
npm install --global vue-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;setup-a-name-setup-a&#34;&gt;Setup &lt;a name=&#34;setup&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;In this section we will structure our vuejs/springboot app.
We will use maven reactor to manage our modules and setup our build correctly.&lt;/p&gt;

&lt;h3 id=&#34;structure-a-name-structure-a&#34;&gt;Structure &lt;a name=&#34;structure&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The base struture we want to create should look something like this.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app
├── frontend
│	├── pom.xml
├── backend
│	├── src
│	├── pom.xml
├── pom.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;parent-a-name-parent-a&#34;&gt;Parent &lt;a name=&#34;parent&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Create a new maven project called app. The directory should not contain anything other than a pom.xml file so delete anything else. Inside the app directory we will create two new modules called frontend and backend. The frontend directory will contain all frontend ui code. The backend directory will contain the backend java/spring services.&lt;/p&gt;

&lt;p&gt;Lets edit the parent pom - &lt;code&gt;app/pom.xml&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;
         xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
         xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;parent&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.4.1.RELEASE&amp;lt;/version&amp;gt;
    &amp;lt;/parent&amp;gt;

    &amp;lt;groupId&amp;gt;io.github.randyyaj&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;app&amp;lt;/artifactId&amp;gt;
    &amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt;
    &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
    
    &amp;lt;modules&amp;gt;
        &amp;lt;module&amp;gt;frontend&amp;lt;/module&amp;gt;
        &amp;lt;module&amp;gt;backend&amp;lt;/module&amp;gt;
    &amp;lt;/modules&amp;gt;

    &amp;lt;properties&amp;gt;
        &amp;lt;main.basedir&amp;gt;${project.basedir}&amp;lt;/main.basedir&amp;gt;
    &amp;lt;/properties&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;frontend-a-name-frontend-a&#34;&gt;Frontend &lt;a name=&#34;frontend&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Next we are going to create our frontend module for our app&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd app
vue init webpack frontend
cd frontend

#Install all dependencies
npm install

#Create a pom.xml file
touch pom.xml

#Run front end app on node server localhost:8080
npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If everything went fine you should see an example vue app running on a node server on localhost:8080.
Kill the node server. Let&amp;rsquo;s create our pom.xml for the frontend module.&lt;/p&gt;

&lt;p&gt;In our pom.xml we are going to tell maven to install a local node and npm version using a maven plugin. The reason why is because some build servers will not have the same node/npm version as your app. We want to specify our own node version to build our app against it instead of using the build agents version.&lt;/p&gt;

&lt;p&gt;For more information about the plugin see &lt;a href=&#34;https://github.com/eirslett/frontend-maven-plugin&#34;&gt;https://github.com/eirslett/frontend-maven-plugin&lt;/a&gt;
&amp;gt;&amp;gt; &lt;em&gt;NOTE: If you are behind a corporate proxy you may need to define your own nodeDownloadRoot, npmDownloadRoot, and npm registry&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Edit the frontend pom.xml - &lt;code&gt;app/frontend/pom.xml&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;
         xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
         xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt;
  &amp;lt;parent&amp;gt;
    &amp;lt;artifactId&amp;gt;app&amp;lt;/artifactId&amp;gt;
    &amp;lt;groupId&amp;gt;io.gitlab.randyyaj&amp;lt;/groupId&amp;gt;
    &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
  &amp;lt;/parent&amp;gt;

  &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
  &amp;lt;artifactId&amp;gt;frontend&amp;lt;/artifactId&amp;gt;

  &amp;lt;build&amp;gt;
    &amp;lt;plugins&amp;gt;
      &amp;lt;plugin&amp;gt;
        &amp;lt;groupId&amp;gt;com.github.eirslett&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;frontend-maven-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.2&amp;lt;/version&amp;gt;
        &amp;lt;executions&amp;gt;
          &amp;lt;!-- Install our node and npm version to run npm/node scripts--&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;install node and npm&amp;lt;/id&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;install-node-and-npm&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
            &amp;lt;configuration&amp;gt;
              &amp;lt;nodeVersion&amp;gt;v6.9.1&amp;lt;/nodeVersion&amp;gt;
              &amp;lt;npmVersion&amp;gt;3.10.9&amp;lt;/npmVersion&amp;gt;
              &amp;lt;nodeDownloadRoot&amp;gt;https://nodejs.org/dist/&amp;lt;/nodeDownloadRoot&amp;gt;
              &amp;lt;npmDownloadRoot&amp;gt;http://registry.npmjs.org/npm/-/&amp;lt;/npmDownloadRoot&amp;gt;
            &amp;lt;/configuration&amp;gt;
          &amp;lt;/execution&amp;gt;

          &amp;lt;!-- Set NPM Registry --&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;npm set registry&amp;lt;/id&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;npm&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
            &amp;lt;configuration&amp;gt;
              &amp;lt;arguments&amp;gt;config set registry https://registry.npmjs.org&amp;lt;/arguments&amp;gt;
            &amp;lt;/configuration&amp;gt;
          &amp;lt;/execution&amp;gt;

          &amp;lt;!-- Set SSL privilege --&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;npm set non-strict ssl&amp;lt;/id&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;npm&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
            &amp;lt;!-- Optional configuration which provides for running any npm command --&amp;gt;
            &amp;lt;configuration&amp;gt;
              &amp;lt;arguments&amp;gt;config set strict-ssl false&amp;lt;/arguments&amp;gt;
            &amp;lt;/configuration&amp;gt;
          &amp;lt;/execution&amp;gt;

          &amp;lt;!-- Install all project dependencies --&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;npm install&amp;lt;/id&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;npm&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
            &amp;lt;!-- optional: default phase is &amp;quot;generate-resources&amp;quot; --&amp;gt;
            &amp;lt;phase&amp;gt;generate-resources&amp;lt;/phase&amp;gt;
            &amp;lt;!-- Optional configuration which provides for running any npm command --&amp;gt;
            &amp;lt;configuration&amp;gt;
              &amp;lt;arguments&amp;gt;install&amp;lt;/arguments&amp;gt;
            &amp;lt;/configuration&amp;gt;
          &amp;lt;/execution&amp;gt;

          &amp;lt;!-- Build and minify static files --&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;id&amp;gt;npm run build&amp;lt;/id&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;npm&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
            &amp;lt;configuration&amp;gt;
              &amp;lt;arguments&amp;gt;run build&amp;lt;/arguments&amp;gt;
            &amp;lt;/configuration&amp;gt;
          &amp;lt;/execution&amp;gt;
        &amp;lt;/executions&amp;gt;
      &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
  &amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Commonly, node projects will create a &lt;code&gt;dist/&lt;/code&gt; directory for final builds which contains the minified source code of the web app. In this case webpack is doing the work in minifying our frontend module. We are going to tell webpack to output the &lt;code&gt;dist/&lt;/code&gt; contents to &lt;code&gt;target/&lt;/code&gt;. I&amp;rsquo;ll go more into this later.&lt;/p&gt;

&lt;p&gt;locate the &lt;code&gt;app/frontend/config/index.js&lt;/code&gt; file and replace the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;index: path.resolve(__dirname, &#39;../dist/index.html&#39;),
assetsRoot: path.resolve(__dirname, &#39;../dist&#39;),
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;index: path.resolve(__dirname, &#39;../target/dist/index.html&#39;),
assetsRoot: path.resolve(__dirname, &#39;../target/dist&#39;),
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;backend-a-name-backend-a&#34;&gt;Backend &lt;a name=&#34;backend&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Now that we have the frontend done lets move onto creating the backend.
We will create a new maven module inside &lt;code&gt;app/&lt;/code&gt; called &lt;code&gt;backend/&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd app
mkdir backend
cd backend
mkdir -p src/main/resources
mkdir -p src/main/java/io/gitlab/randyyaj
mkdir -p src/test/java/io/gitlab/randyyaj
touch pom.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Remember how we wanted to put the &lt;code&gt;dist/&lt;/code&gt; content into &lt;code&gt;target/&lt;/code&gt; in the frontend module? Well that&amp;rsquo;s because we are going to use a maven plugin to copy that into our &lt;code&gt;src/main/resources/public&lt;/code&gt; directory in our backend module. This directory is how tomcat knows how to run our frontend app.&lt;/p&gt;

&lt;p&gt;Edit the backend pom.xml - &lt;code&gt;app/backend/pom.xml&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;
         xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
         xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt;
    &amp;lt;parent&amp;gt;
        &amp;lt;artifactId&amp;gt;app&amp;lt;/artifactId&amp;gt;
        &amp;lt;groupId&amp;gt;io.gitlab.randyyaj&amp;lt;/groupId&amp;gt;
        &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;/parent&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;artifactId&amp;gt;backend&amp;lt;/artifactId&amp;gt;

    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;

    &amp;lt;build&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;/plugin&amp;gt;

            &amp;lt;plugin&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-resources-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;id&amp;gt;Copy App Content&amp;lt;/id&amp;gt;
                        &amp;lt;phase&amp;gt;generate-resources&amp;lt;/phase&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;copy-resources&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                        &amp;lt;configuration&amp;gt;
                            &amp;lt;outputDirectory&amp;gt;src/main/resources/public&amp;lt;/outputDirectory&amp;gt;
                            &amp;lt;overwrite&amp;gt;true&amp;lt;/overwrite&amp;gt;
                            &amp;lt;resources&amp;gt;
                                &amp;lt;resource&amp;gt;
                                    &amp;lt;directory&amp;gt;${project.parent.basedir}/frontend/target/dist&amp;lt;/directory&amp;gt;
                                    &amp;lt;includes&amp;gt;
                                        &amp;lt;include&amp;gt;static/&amp;lt;/include&amp;gt;
                                        &amp;lt;include&amp;gt;index.html&amp;lt;/include&amp;gt;
                                    &amp;lt;/includes&amp;gt;
                                &amp;lt;/resource&amp;gt;
                            &amp;lt;/resources&amp;gt;
                        &amp;lt;/configuration&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We will now create a main class for spring boot to pick up and run:&lt;/p&gt;

&lt;p&gt;At this time your structure should look similar to this&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tree -L 2
app
├── README.md
├── backend
│   ├── pom.xml
│   ├── src
│   └── target
├── frontend
│   ├── README.md
│   ├── build
│   ├── config
│   ├── etc
│   ├── index.html
│   ├── node
│   ├── node_modules
│   ├── package.json
│   ├── pom.xml
│   ├── src
│   ├── static
│   ├── target
│   └── test
└── pom.xml

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;running-the-spring-boot-app-a-name-deploy-a&#34;&gt;Running the spring boot app &lt;a name=&#34;deploy&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Now that we finished setting up our project we can run the app by executing the commands below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd app
mvn install
mvn --projects backend springboot:run
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;summary-a-name-summary-a&#34;&gt;Summary &lt;a name=&#34;summary&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;To sum things up we created a maven reactor project that has a parent pom. The parent pom captures all the modules under it and when we run &lt;code&gt;mvn install&lt;/code&gt; it will run any pom files in the module directories. The frontend module downloads a local npm and node executable, setups the registry and builds the app by minifying the source code and outputting it into the frontend&amp;rsquo;s &lt;code&gt;target/dist&lt;/code&gt; directory. The backend code then copies the dist/ directory&amp;rsquo;s contents and puts it into &lt;code&gt;src/main/resources/public&lt;/code&gt; where spring boots embeded tomcat will look for and serve when we startup our springboot app and visit localhost:8080.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Springboot with Impala and Kudu</title>
      <link>http://randyyaj.github.io/post/20161128_kudu_impala_spring/</link>
      <pubDate>Mon, 28 Nov 2016 20:52:19 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20161128_kudu_impala_spring/</guid>
      <description>

&lt;h3 id=&#34;how-to-run-this-app&#34;&gt;How to run this app&lt;/h3&gt;

&lt;p&gt;Please follow the instructions below to get kudu running locally with java and impala driver.&lt;/p&gt;

&lt;h3 id=&#34;download-the-kudu-quickstart-vm&#34;&gt;Download the kudu quickstart VM&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://kudu.apache.org/releases/&#34;&gt;Kudu Quick Start VM&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;create-the-department-file-to-load&#34;&gt;Create the department file to load&lt;/h3&gt;

&lt;p&gt;You can use this python script to create the department file to load: name it generate.py&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/local/bin/python3
default_path = &#39;/Users/ryang1/Desktop&#39;
def generateDepartmentMasterFile():
    &amp;quot;&amp;quot;&amp;quot;
    Company Id | Department Code | Department Description
    &amp;quot;&amp;quot;&amp;quot;
    file = open(default_path+&#39;/dept.txt&#39;,&#39;a&#39;)
    for x in range (1,501):
        file.write(&#39;Company{0}|{0}|Dept{0} 
Description\n&#39;.format(str(x)))
generateDepartmentMasterFile()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run it using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python3 generate.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;load-the-department-file&#34;&gt;Load the department file&lt;/h3&gt;

&lt;p&gt;Start your kudu quickstart VM. Once it has started run this command to find the vm ip. Should start with 192.168.***&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ip addr show
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[demo@quickstart ~]$ ip addr show
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 16436 qdisc noqueue 
state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc 
pfifo_fast state UP qlen 1000
    link/ether 08:00:27:8a:40:9a brd ff:ff:ff:ff:ff:ff
    inet 192.168.57.100/24 brd 192.168.57.255 scope global 
eth0
3: eth1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc 
pfifo_fast state UP qlen 1000
    link/ether 08:00:27:16:94:b5 brd ff:ff:ff:ff:ff:ff
    inet 10.0.3.15/24 brd 10.0.3.255 scope global eth1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you figure out your vm ip address, we will copy over the dept.txt file we created earlier with the python script and put it into hdfs.&lt;/p&gt;

&lt;p&gt;ssh username:demo password:demo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ scp dept.txt demo@192.168.57.100:~/
$ ssh demo@192.168.57.100
$ hdfs dfs -put -f dept.txt /data/dept
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-the-department-table-in-kudu-impala&#34;&gt;Create the department table in kudu/impala&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE EXTERNAL TABLE department_raw (
    company_id string,
    department_code int,
    department_description string)
    ROW FORMAT DELIMITED
    FIELDS TERMINATED BY &#39;|&#39;
    LOCATION &#39;/data/dept/&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE TABLE department
DISTRIBUTE BY HASH (company_id) INTO 16 BUCKETS
TBLPROPERTIES(
&#39;storage_handler&#39; = 
&#39;com.cloudera.kudu.hive.KuduStorageHandler&#39;,
&#39;kudu.table_name&#39; = &#39;department&#39;,
&#39;kudu.master_addresses&#39; = &#39;127.0.0.1&#39;,
&#39;kudu.key_columns&#39; = &#39;company_id&#39;
 ) AS SELECT * FROM department_raw;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;# Set the database configuration&lt;/p&gt;

&lt;p&gt;In the project search for src/main/java/config/DatabaseConfig.java and set the datasource url to your kudu/impala VM url&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Bean(name=&amp;quot;dataSource&amp;quot;)
public DataSource dataSource() {
    DataSourceBuilder dataSourceBuilder = DataSourceBuilder.create();
    
    //CHANGE ME!
    dataSourceBuilder.url(&amp;quot;jdbc:impala://192.168.57.100:21050&amp;quot;);
    
    dataSourceBuilder.username(&amp;quot;demo&amp;quot;);
    dataSourceBuilder.password(&amp;quot;demo&amp;quot;);
    dataSourceBuilder.driverClassName(&amp;quot;com.cloudera.impala.jdbc4.Driver&amp;quot;);
    return dataSourceBuilder.build();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;setting-up-intellij&#34;&gt;Setting up intellij&lt;/h1&gt;

&lt;p&gt;In order to run the spring boot app you will need to set the run configuration
Run -&amp;gt; Edit Configurations
Press the + icon
create a new maven entry name it to springboot-run
change the command line input field to&lt;/p&gt;

&lt;p&gt;spring-boot:run&lt;/p&gt;

&lt;p&gt;hit apply/save.&lt;/p&gt;

&lt;p&gt;You are all set. Hit run.&lt;/p&gt;

&lt;p&gt;To see it in action go to your browser and visit url: &lt;a href=&#34;http://localhost:8080/department?companyId=Company1&#34;&gt;http://localhost:8080/department?companyId=Company1&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://randyyaj.github.io/about/</link>
      <pubDate>Mon, 28 Nov 2016 19:49:50 -0500</pubDate>
      
      <guid>http://randyyaj.github.io/about/</guid>
      <description>&lt;p&gt;About Page&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Springboot deploy as WAR</title>
      <link>http://randyyaj.github.io/post/20161118_springboot_war/</link>
      <pubDate>Fri, 18 Nov 2016 20:52:19 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20161118_springboot_war/</guid>
      <description>&lt;p&gt;How to get springboot to deploy war instead of jar.&lt;/p&gt;

&lt;p&gt;pom.xml&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;
    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
    xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt;
         
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
    &amp;lt;artifactId&amp;gt;your-artifact-id&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.0.0-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;groupId&amp;gt;your.group.id&amp;lt;/groupId&amp;gt;
    &amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;
    &amp;lt;name&amp;gt;${project.artifactId}&amp;lt;/name&amp;gt;

    &amp;lt;properties&amp;gt;
        &amp;lt;your.tomcat.version&amp;gt;7.0.70&amp;lt;your.tomcat.version&amp;gt;
    &amp;lt;/properties&amp;gt;
         
    &amp;lt;parent&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.3.6.RELEASE&amp;lt;/version&amp;gt;
    &amp;lt;/parent&amp;gt;
         
    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.tomcat&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;tomcat-coyote&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${your.tomcat.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.tomcat&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;tomcat-catalina&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${your.tomcat.version}&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-tomcat&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;commons-io&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;commons-io&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;2.5&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;commons-fileupload&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;commons-fileupload&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.3.2&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;javax.servlet-api&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;3.1.0&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Application.java&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@SpringBootApplication(scanBasePackages=&amp;quot;your.package.name&amp;quot;)
@Import({BeanConfig.class})
public class Application extends SpringBootServletInitializer implements CommandLineRunner  {

    @Override
    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
        return application.sources(Application.class);
    }
    
    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;BeanConfig.java&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Configuration
public class BeanConfig {
    @Bean
    public EmbeddedServletContainerFactory servletContainer() {
        return new TomcatEmbeddedServletContainerFactory();
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Beer Brewing</title>
      <link>http://randyyaj.github.io/post/20160504_beer_brewing/</link>
      <pubDate>Wed, 04 May 2016 12:30:33 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20160504_beer_brewing/</guid>
      <description>

&lt;p&gt;I am a big beer enthusiast. I love beer of all sorts and wanted to give a shot
at making my own. On my birthday my wife bought me an American Pale Ale brew kit from &lt;a href=&#34;https://craftabrew.com/&#34;&gt;Craft a Brew&lt;/a&gt; and we had the pleasure to brew it and try it.
I&amp;rsquo;m writing this review for anyone interested in brewing or just want to read about it.&lt;/p&gt;

&lt;h3 id=&#34;the-kit&#34;&gt;The Kit&lt;/h3&gt;

&lt;p&gt;The kit came in a box that was beautifully designed even the instruction book was nice to look at.&lt;/p&gt;

&lt;p&gt;In the kit included these equipments
- 1 Gallon Carboy
- Air lock
- Drilled rubber stopper
- Transfer tubing
- Racking cane
- Thermometer
- Funnel
- Tube Clamp&lt;/p&gt;

&lt;p&gt;Bag Contents
- Malt Extract (Powder)
- Specialty Grains
- Hops
- Yeast
- Sanitizer
- Grain Nag&lt;/p&gt;

&lt;p&gt;I ended up buying these things
- A sink strainer. It fits perfectly on the funnel.
- Ice
- &lt;a href=&#34;http://www.amazon.com/Glass-Beer-Bottle-Pack-Amber/dp/B018V24Q0I?ie=UTF8&amp;amp;psc=1&amp;amp;redirect=true&amp;amp;ref_=oh_aui_detailpage_o01_s01&#34;&gt;Swing Top Bottles&lt;/a&gt;
- &lt;a href=&#34;http://www.amazon.com/Star-San-2883-Acid-Sanitizer/dp/B01467UGN8?ie=UTF8&amp;amp;psc=1&amp;amp;redirect=true&amp;amp;ref_=oh_aui_detailpage_o00_s01&#34;&gt;StarSan&lt;/a&gt;
- &lt;a href=&#34;http://www.amazon.com/Empty-Amber-Glass-Spray-Bottle/dp/B00MU7R52M?ie=UTF8&amp;amp;psc=1&amp;amp;redirect=true&amp;amp;ref_=oh_aui_detailpage_o00_s00&#34;&gt;Spray Bottle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;img-fluid&#34; src=&#34;https://dl.dropboxusercontent.com/u/45209445/brewing/20160413_165950.jpg&#34;/&gt;&lt;/p&gt;

&lt;p&gt;The swing bottles were something I chose because I didn&amp;rsquo;t want to go through the
hassle of also buying a beer capper and caps and mostly because I&amp;rsquo;m lazy and just
needed something fast and easy to use. The StarSan was definitely not needed as the
kit came with its own sanitizer. Although, I do have to say that I prefer the StarSan
solely because it doesn&amp;rsquo;t feel soapy. The strainer was somewhat useful but next time
I would substitute it with a hop filter screen and just avoid messing with hops going into the brew altogether. I put the StarSan in to the spray bottle and used it to sanitize my work area and equipments. Again the StarSan is definitely optional and you can just use disinfectant wipes or something just make sure the work area is clean.&lt;/p&gt;

&lt;p&gt;The steps in the instruction manual were good but still sort of confusing.
Watching this video helped a ton. &lt;a href=&#34;https://www.youtube.com/user/CraftaBrew&#34;&gt;https://www.youtube.com/user/CraftaBrew&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;what-went-right&#34;&gt;What went right&lt;/h3&gt;

&lt;p&gt;Almost everything went right actually. The sanitizing and cooking portion of the brew was pretty straight forward although it did take some time. I just had to make sure that the water wasn&amp;rsquo;t too hot to steep the barley. The bottling portion was easy too just had to make sure I knew how to use the friggin siphon. My wife helped me out on this one and we eventually got it working. Just a tip buy and auto siphon saves you so much trouble.&lt;/p&gt;

&lt;p&gt;&lt;img width=&#34;49%&#34; src=&#34;https://dl.dropboxusercontent.com/u/45209445/brewing/brewing_pot.jpg&#34;/&gt;
&lt;img width=&#34;49%&#34; src=&#34;https://dl.dropboxusercontent.com/u/45209445/brewing/carboy.jpg&#34;/&gt;&lt;/p&gt;

&lt;h3 id=&#34;what-went-wrong&#34;&gt;What went wrong&lt;/h3&gt;

&lt;p&gt;One of my friggin bottles exploded! Man I only read about this happening but didn&amp;rsquo;t
expect it to happen to me. It seems that one of the bottle&amp;rsquo;s quality was pretty shitty after examining the bottle and looking at the inside glass it was prevalent that the bottle was thinner on one side. The scary part was I had plans on gifting this batch to friends and was afraid the bottle might explode on them. They are okay. Also an added note is make sure you add the correct sugar portion accordingly to your bottle size. I was using the 16oz bottles and that could have contributed to the bottle bomb. &lt;sup&gt;10&lt;/sup&gt;&amp;frasl;&lt;sub&gt;10&lt;/sub&gt; would make a bottle bomb again.&lt;/p&gt;

&lt;h3 id=&#34;review&#34;&gt;Review&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;But how did the beer taste man!?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After a month of waiting we finally tasted the beer and to our surprise it was quite
refreshing and tasty. The taste was similar to that of Sierra Nevada&amp;rsquo;s Pale Ale
which I really enjoy. The color was nice too although it was chill hazed when we got
it out of the fridge. No problem still tasted amazing. The alcohol kicked in fast and gave me a nice buzz it wasn&amp;rsquo;t too powerful but you can definitely tell it was there. The smell of the beer was fantastic and even during the fermentation process it was a joy to take in. Overall, I think this beer brewing kit was pretty straight forward and the beer that we produced was very good. I would highly recommend people who wants to start to give this kit a go.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Godot Game Jam Free Assets</title>
      <link>http://randyyaj.github.io/post/20160322_inkscape/</link>
      <pubDate>Tue, 22 Mar 2016 18:13:01 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20160322_inkscape/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://dl.dropboxusercontent.com/u/45209445/blog_posts/mouse_and_cheese_game.svg&#34;&gt;Download Assets Here&lt;/a&gt;
Right click to download SVG. Ad-Free you&amp;rsquo;re welcome!&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m no &lt;a href=&#34;http://www.2dgameartguru.com/&#34;&gt;Chris Hildenbrand&lt;/a&gt; but I made some assets
for the folks who need it competing in the &amp;ldquo;Mouse Theme&amp;rdquo; &lt;a href=&#34;https://itch.io/jam/godotjam032016&#34;&gt;Godot Engine Jam&lt;/a&gt;.
Was going for a Chip&amp;rsquo;s Challenge look. I also thought Rodent&amp;rsquo;s Revenge would have
been cool to make also.&lt;/p&gt;

&lt;p&gt;Assets are made in Inkscape feel free to modify or improve.
Assets are LICENSED under the PUBLIC DOMAIN. Do whatever with them as you please.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;img-fluid&#34; src=&#34;https://dl.dropboxusercontent.com/u/45209445/blog_posts/assets.png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming - Running Kafka Locally</title>
      <link>http://randyyaj.github.io/post/20160318_kafka_running_locally/</link>
      <pubDate>Fri, 18 Mar 2016 09:41:26 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20160318_kafka_running_locally/</guid>
      <description>&lt;p&gt;Download the latest version of kafka from apache&amp;rsquo;s website. Make sure to download
the binaries if you want to run it locally. Unzip the contents of the zip file and edit the config/server.properties file.&lt;/p&gt;

&lt;p&gt;Set these variables to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;host.name=localhost
advertised.host.name=localhost
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To enable auto-creation and deletion of topics in that same properties file add these properties&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;delete.topic.enable=true
auto.create.topics.enable=true
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>GameDev - Bombs</title>
      <link>http://randyyaj.github.io/post/20160317_gamedev/</link>
      <pubDate>Thu, 17 Mar 2016 20:52:19 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20160317_gamedev/</guid>
      <description>&lt;p&gt;A Dactyl Clone I made using the Godot Engine. All code and assets are free for personal use.&lt;/p&gt;

&lt;p&gt;This game is OpenSauce(open source) please feel free to savor the goodness and share it with the world! All recipes and ingredients for this game is licensed under the GPL2 License.
Assets (Sound/Art) are licensed under the Creative Commons (&lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34;&gt;http://creativecommons.org/licenses/by/3.0/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/randyyaj/Bombs&#34;&gt;&lt;img class=&#34;img-fluid&#34; src=&#34;https://camo.githubusercontent.com/cd6000ed84a02c75d1713cc1dee26b5505861ac9/687474703a2f2f692e696d6775722e636f6d2f3052394b31564f2e706e673f312532303d31303578&#34; alt=&#34;Drawing&#34; style=&#34;width: 200px;&#34;/&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GameDev - Get the Goat</title>
      <link>http://randyyaj.github.io/post/20160317_03_gamedev/</link>
      <pubDate>Thu, 17 Mar 2016 20:52:19 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20160317_03_gamedev/</guid>
      <description>&lt;p&gt;A game I made for the Global Game Jam Event. The theme was Ritual. All I could think about was Shamans and voodoo magic and sacrificial rituals so I decided to make an endless runner where the player is a goat and has to escape the shamans.&lt;/p&gt;

&lt;p&gt;The other idea I had was a person who was totally OCD and has to do these rituals like turn a door knob 5 times or sort things in order.&lt;/p&gt;

&lt;p&gt;The software I used was Godot Engine, Inkscape, Spriter2D.
You can find the game located here
&lt;a href=&#34;http://globalgamejam.org/2016/games/get-goat&#34;&gt;Get the Goat!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;img-fluid&#34; src=&#34;https://dl.dropboxusercontent.com/u/45209445/blog_posts/screenshot.png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GameDev - Kraken Rampage!</title>
      <link>http://randyyaj.github.io/post/20160317_02_gamedev/</link>
      <pubDate>Thu, 17 Mar 2016 20:52:19 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20160317_02_gamedev/</guid>
      <description>&lt;p&gt;A game I made for ludumDare33. Theme you are the monster. In this game you are a squid like creature that shits ink on humanity.
The objective is to prevent the humans from bunking. I didn&amp;rsquo;t finish on time but the game is playable and funny.&lt;/p&gt;

&lt;p&gt;Software I used was Godot Engine, Inkscape, and Spriter.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ludumdare.com/compo/ludum-dare-33/?action=preview&amp;uid=34284&#34;&gt;&lt;img class=&#34;img-fluid&#34; src=&#34;http://ludumdare.com/compo/wp-content/compo2//479518/34284-shot0-1440377998.png-eq-900-500.jpg&#34;/&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game is OpenSauce(open source) please feel free to savor the goodness and share it with the world! All recipes and ingredients for this game is licensed under the GPL2 License. Assets (Sound/Art) are licensed under the Creative Commons (&lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34;&gt;http://creativecommons.org/licenses/by/3.0/&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inkscape - Analysis of 2D Game Art (Denki Word Quest)</title>
      <link>http://randyyaj.github.io/post/20151014_inkscape/</link>
      <pubDate>Wed, 14 Oct 2015 17:43:46 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20151014_inkscape/</guid>
      <description>

&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;

&lt;p&gt;In this post we will cover the art style of the game Word Quest made by Denki.
We will examine the artwork and then recreate it using Inkscape.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Copyright Disclaimer: I do not own the rights to Word Quest. All work done here is for the sole purpose of study.  All rights belong to it&amp;rsquo;s rightful owner(s). No copyright infringement intended.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://dl.dropboxusercontent.com/u/45209445/blog_posts/denki_word_quest_breakdown.svg&#34;&gt;Download SVG&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;analysis&#34;&gt;Analysis&lt;/h3&gt;

&lt;p&gt;The image below is a picture of the game Word Quest. I will be showing you how to create the character,
the tree behind him, and also the rocks he is standing on.&lt;/p&gt;

&lt;p&gt;If you look carefully you can see that the tree is re-used through out the scene with very minor
detail add-ons. See the last tree on the right its the same tree.
Actually all of them are except the one funky tree that stands in the middle.
The artists scaled the same tree and reused it through out the scene without having to create new trees which saved both
time and money. The same goes for the rocks. If you look at all the rocks they vary in sizes and all look different.
However, with close examination, you can tell all the rocks are in fact the same.
They have just been scaled differently. Neat trick huh?&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;img-fluid&#34; src=&#34;http://i.ytimg.com/vi/azk9rFZJ_cs/maxresdefault.jpg&#34;&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;the-breakdown&#34;&gt;The Breakdown&lt;/h3&gt;

&lt;p&gt;In this section we will go into what I call the breakdown. I&amp;rsquo;ll show you the line art, color, and composition
used to create the game assets. I have also provided the svg file so that you can study it yourself.
The download link is located in the preface at the top. Although this artwork was probably made in illustrator
I dont have that kind of money to spare so I used inkscape instead. However, it should be easy enough to follow along
in your vector editor of choice.&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;img-fluid&#34; src=&#34;https://dl.dropboxusercontent.com/u/45209445/blog_posts/word_quest_breakdown.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;As you can see the art is quite easy to mimic and also looks really cool. The artists did a great job stacking
together the different layers as it almost gives it a paper cut out effect. Another thing to note is the
water color like texture found on the grass and funky tree. You can achieve this look in inkscape using the
pattern/spray tool and move it around as you like with the tweak tool. I will cover those in future tutorials.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;If you enjoyed this game art breakdown and would like to see more please
leave a comment below. Stay tuned and thanks again for reading!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One day with - Emacs</title>
      <link>http://randyyaj.github.io/post/20151014_one_day_with/</link>
      <pubDate>Wed, 14 Oct 2015 17:43:46 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20151014_one_day_with/</guid>
      <description>

&lt;p&gt;I typically use Vi as my terminal editor of choice. However after recently talking with a colleague about Emacs as his terminal editor of choice; he intrigued me to using it. Now I&amp;rsquo;ve opened up Emacs in the past before but that was just from accidentally opening it in the terminal. This week I decided to actually learn it.&lt;/p&gt;

&lt;p&gt;In this post I will write my daily thoughts, likes and dislikes, and what I learned that may help beginners trying to pick up this tool. In addition, to stay true to this post I decided to write this whole post in emacs. What better way to learn something than to just use it.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;up-and-running&#34;&gt;Up and Running&lt;/h3&gt;

&lt;p&gt;So coming in fresh I had no idea what C-x C-c meant. Like I literally hit shift c + x shift c + c. After a little googling I find out that the C in C-x is actually the control key. So now looking back C-x C-c really is just key sequence Ctrl + x + c.&lt;/p&gt;

&lt;p&gt;I also at first had no idea what M-f meant. Browsing stackoverflow helped me out on this one. Apparently M is the meta key so in this case since I was using a Mac machine M is the option/alt key. In windows it is the windows or super key. The weird thing about it was that the option key also made my Mac output funky text like this ƒ and ∫ when I try to use Meta + f and Meta + b. The solution to that problem was either to modify my terminal(iTerm2) settings to make the Meta key behave like a Meta key or use the escape key. I chose to do the former as it was easier to reach the option key for me. So to make this post easier for beginners I will refer to C as Ctrl and M as Meta.&lt;/p&gt;

&lt;p&gt;To get started I decided to learn the typical workflow patterns all editors should offer which are&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;copy/cut and paste&lt;/li&gt;
&lt;li&gt;undo and redo&lt;/li&gt;
&lt;li&gt;search and replace&lt;/li&gt;
&lt;li&gt;navigation&lt;/li&gt;
&lt;li&gt;installing plugins&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Writing this post there were several occasions where I needed to cut and paste some lines. I looked at this &lt;a href=&#34;http://www.rgrjr.com/emacs/emacs_cheat.html&#34;&gt;cheat sheet&lt;/a&gt; and easily enough all I had to do was mark the starting point with Ctrl + Space and then go to the end of the desired location and hit Ctrl + w. It also helps that you can copy a whole line by issuing Ctrl + k.&lt;/p&gt;

&lt;p&gt;Undo and redo was weird for me as I am used to doing Ctrl+r for redo and hitting u to undo in vim.
The first thing I had to learn was what the heck the command for undo Ctrl+/ and redo Ctrl+g+/ was.
Sometimes I would get weird behaviors when trying to redo changes but that may just be me not being use to emacs yet.&lt;/p&gt;

&lt;p&gt;The search and replace feature took me a few tries but I eventually got it. To search was relatively easy just hit Ctrl+s and start typing the word you want to find. The replace functionality was slightly more involved. To replace you had to hit Meta+% (Meta+Shift+5). Which will ask you to find the word to search for (hit enter) then the word to replace with (hit enter). Lastly it&amp;rsquo;ll ask if you want to replace it. I had hit enter a couple times and it kept saying I had 0 occurrences. Finally I decided to hit the y key instead and it finally replaced the word for me.&lt;/p&gt;

&lt;p&gt;The navigation in emacs is a breeze as all arrow keys work and using Ctrl+v and Meta+v I was able to do page up and page down. Jumping words were also easy as I could just hit the sequence Meta key + arrow-Left or arrow-Right to jump words vs Meta+f Meta+b. But for productivity I can see where Meta+f and Meta+b can be more resourceful.&lt;/p&gt;

&lt;p&gt;Installing plugins has always been one of those things I hated but needed the most for vim. Sometimes things work other times its a complete disaster. So I was really hoping that emacs would be easier and decided to try installing a plugin to see for myself. The plugin I decided to try was a markdown plugin seeing as this post was written in markdown I figured hey why not. A little bit of googling and I happened to stumble upon this link &lt;a href=&#34;http://emacswiki.org/emacs/MarkdownMode&#34;&gt;Emacs Markdown Mode&lt;/a&gt;. Now I have never done this before so it all looks scary new to me. The first few attempts really sucked as I had no idea what was wrong. I read the documentation on the plugin site multiple times and had no luck. I eventually got it to work after upgrading my Emacs version to the latest version. In doing so, the editor also allowed me to do visual selection - hold shift and using the arrow keys. I thought that was pretty cool.&lt;/p&gt;

&lt;p&gt;The hardest part for me was tying to un-train myself from using vim commands that I was so use to. I found myself constantly wanting to hit :w or run vim commands. Even when revisiting this post I sometimes open it via the vim command first. Had to resist the urges&amp;hellip; must resist. From time to time I did happen to open the debugger window due to trained vim keystrokes. The way to get out of the debugger was pretty straight forward as I just hit the q key but sometimes it didn&amp;rsquo;t work so I had to do something like Ctrl+1 to kill the window.&lt;/p&gt;

&lt;p&gt;At the end of the day I felt pretty confident with the basic emacs skills I developed and do think that it is a great and easy tool to pick up with a minimal learning curve.&lt;/p&gt;

&lt;h3 id=&#34;likes&#34;&gt;Likes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I like that the editor has only one mode. Unlike vim there are different modes that maybe intimidating to new users.&lt;/li&gt;
&lt;li&gt;I like that the arrow keys work&lt;/li&gt;
&lt;li&gt;Auto-saving. I can&amp;rsquo;t tell you how much I want this in Vi.&lt;/li&gt;
&lt;li&gt;Emacs feels like an IDE where you can customize language specific features with different modes via the Ctrl key combination.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;dislikes&#34;&gt;Dislikes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Undo and redo works weird. I&amp;rsquo;m still trying to wrap my head around this.&lt;/li&gt;
&lt;li&gt;Frustrating help window that refuses to close. I eventually got it to close by issuing Ctrl+1.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;I wish there was a package manager to maintain the installation of the plugins&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;resource-used&#34;&gt;Resource used&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://www.rgrjr.com/emacs/emacs_cheat.html&#34;&gt;Emacs Cheat Sheet&lt;/a&gt;
&lt;a href=&#34;https://www.gnu.org/doc/doc.html&#34;&gt;GNU Emacs Documentation&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;what-i-learned&#34;&gt;What I learned&lt;/h3&gt;

&lt;p&gt;I felt that emacs was a really easy editor to start working in once you understood how the macros work.
The workflow was somewhat smooth for a one day use I suppose it gets easier with time.
The C and M keys are really Ctrl and Meta. The sequence gets easier once you understand the pattern.&lt;/p&gt;

&lt;p&gt;Macros that benefited me&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Ctrl + Space //marked location
Ctrl + w     //cut location
Ctrl + y     //paste
Ctrl + k     //cut whole line

//undo:
Ctrl + _
Ctrl + /

//redo:
Ctrl + g + _
Ctrl + g + /
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;would-i-ever-use-it-again&#34;&gt;Would I ever use it again&lt;/h3&gt;

&lt;p&gt;Sure. But I think I&amp;rsquo;ll stick with Vi for a while.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming - How to re-run completed spring batch jobs</title>
      <link>http://randyyaj.github.io/post/20151014_java/</link>
      <pubDate>Wed, 14 Oct 2015 17:43:46 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20151014_java/</guid>
      <description>

&lt;p&gt;While working with spring batch my team noticed that we couldn&amp;rsquo;t resubmit completed jobs even thought the params were different due to a spring batch feature not allowing non unique jobs to reprocesses after completion. In searching for an answer I stumbled upon this &lt;a href=&#34;http://forum.spring.io/forum/spring-projects/batch/102028-job-restartability-v-job-rerunnability&#34;&gt;Spring Forum Post&lt;/a&gt;. The details provided work although we still had to pass in a run id in our rest call since we are submitting job via rest API. So rather than specifying a run id each time we instead overrode the RunIdIncrementer class&amp;rsquo; getNext() method to just return a new Date() long each time. The code below provides a working solution.&lt;/p&gt;

&lt;h3 id=&#34;xml&#34;&gt;Xml&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;bean id =&amp;quot;incrementer&amp;quot; class =&amp;quot;com.company.app.batch.util.RunIdIncrementer&amp;quot;&amp;gt;
    &amp;lt;property name=&amp;quot;key&amp;quot; value=&amp;quot;processedDttm&amp;quot;/&amp;gt;
&amp;lt;/bean&amp;gt;

&amp;lt;batch:job id=&amp;quot;nameOfJob&amp;quot; incrementer=&amp;quot;incrementer&amp;quot; restartable=&amp;quot;false&amp;quot;&amp;gt;
...
&amp;lt;/batch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;java&#34;&gt;Java&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;import org.springframework.batch.core.JobParameters;
import org.springframework.batch.core.JobParametersBuilder;
import org.springframework.batch.core.JobParametersIncrementer;

import java.util.Date;

public class RunIdIncrementer implements JobParametersIncrementer {
    private static String RUN_ID_KEY = &amp;quot;run.id&amp;quot;;
    private String key;

    public RunIdIncrementer() {
        this.key = RUN_ID_KEY;
    }

    public void setKey(String key) {
        this.key = key;
    }

    public JobParameters getNext(JobParameters parameters) {
        JobParameters params = parameters == null?new JobParameters():parameters;
        long id = new Date().getTime();
        return (new JobParametersBuilder(params)).addLong(this.key, Long.valueOf(id)).toJobParameters();
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Goodbye Blogspot</title>
      <link>http://randyyaj.github.io/post/20150117_good_bye_blogspot/</link>
      <pubDate>Sat, 17 Jan 2015 22:12:40 -0400</pubDate>
      
      <guid>http://randyyaj.github.io/post/20150117_good_bye_blogspot/</guid>
      <description>&lt;p&gt;I doubt it but if anybody reading this now has ever looked at my blog over at randyyaj.blogspot.com. It has come to an end&amp;hellip; Oh fair well thee.
I switched to a static site generator because I wanted a little more control of my contents and structure of my pages and also these static site generators
are pretty nice with their markdown and all.&lt;/p&gt;

&lt;p&gt;I looked at a few other options too such as jekyll, hexo, and pelican but ultimately ended up using hugo. At first I was hesitant at using hugo since I have never touched the go language before but that wasn&amp;rsquo;t the case here. Hugo was super easy to setup and fast too. Was able to get it up and running following the quick-start guide with barely any go lang knowledge.&lt;/p&gt;

&lt;p&gt;So what&amp;rsquo;s going to happen to my blogspot? Well it&amp;rsquo;ll still be there and the contents will still be able to download but all of my future posts will exist here now.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>